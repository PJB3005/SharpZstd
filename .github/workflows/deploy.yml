name: deploy
on:
  create: # when tags are created
  workflow_dispatch: # clickable button in CI manager

env:
  VCPKG_INSTALLED_DIR: vcpkg_installed
  VCPKG_OVERLAY_TRIPLETS: 'custom-triplets'

jobs:

  vcpkg_windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-windows
          

  vcpkg_windows-x86:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x86-windows


  vcpkg_windows-arm64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-windows


  vcpkg_linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-linux
        env:
          CFLAGS: "-Xlinker -Bsymbolic"
          LDFLAGS: "-Xlinker -Bsymbolic"


  vcpkg_linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install GNU AArch64 tools
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y     

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-linux
        env:
          CFLAGS: "-Xlinker -Bsymbolic"
          LDFLAGS: "-Xlinker -Bsymbolic"
      

  vcpkg_osx-x64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-osx
      
      
  vcpkg_osx-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-osx
        

  pack-nuget:
    name: pack-nuget
    needs:
      - vcpkg_windows-x64
      - vcpkg_windows-x86
      - vcpkg_windows-arm64
      - vcpkg_linux-x64
      - vcpkg_linux-arm64
      - vcpkg_osx-x64
      - vcpkg_osx-arm64

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: vcpkg_installed

      - name: List $RUNNER_WORKSPACE after build
        run: find $RUNNER_WORKSPACE
        shell: bash
    
      - name: Rename artifacts
        env:
          package-name: SharpZstd.Native
          lib-version: "1.5.2"
          renamed-dst: vcpkg_renames_binaries
        run: mkdir ${{ renamed-dst }}
             mv vcpkg_installed/x86-windows/bin/zstd.dll ${{ renamed-dst }}/${{ package-name }}.win-x86.dll |
             mv vcpkg_installed/x86-windows/bin/zstd.pdb ${{ renamed-dst }}/${{ package-name }}.win-x86.pdb |
     
             mv vcpkg_installed/x64-windows/bin/zstd.dll ${{ renamed-dst }}/${{ package-name }}.win-x64.dll |
             mv vcpkg_installed/x64-windows/bin/zstd.pdb ${{ renamed-dst }}/${{ package-name }}.win-x64.pdb | 
                 
             mv vcpkg_installed/arm64-windows/bin/zstd.dll ${{ renamed-dst }}/${{ package-name }}.win-arm64.dll |
             mv vcpkg_installed/arm64-windows/bin/zstd.pdb ${{ renamed-dst }}/${{ package-name }}.win-arm64.pdb | 
   
             mv vcpkg_installed/x64-linux/lib/libzstd.so.${{ lib-version }} ${{ renamed-dst }}/${{ package-name }}.linux-x64.dll |    
             mv vcpkg_installed/arm64-linux/lib/libzstd.so.${{ lib-version }} ${{ renamed-dst }}/${{ package-name }}.linux-arm64.dll |
             
             mv vcpkg_installed/x64-osx/lib/libzstd.${{ lib-version }}.dylib ${{ renamed-dst }}/${{ package-name }}.osx-x64.dll |
             mv vcpkg_installed/arm64-osx/lib/libzstd.${{ lib-version }}.dylib ${{ renamed-dst }}/${{ package-name }}.osx-arm64.dll
        
      - name: List $RUNNER_WORKSPACE after build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Restore
        run: dotnet restore
      
      - name: Build
        run: dotnet build -c Release --no-restore 
        
      - name: Test
        run: dotnet test -c Release --no-restore --no-build
       
      - name: Pack
        run: dotnet pack -c Release --no-restore --no-build --verbosity normal
        
      - name: Upload Nuget artifact
        uses: actions/upload-artifact@v3
        with:
          name: pkg.Release
          path: artifacts/pkg/Release/*
        
      - name: Nuget Push 
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: artifacts/pkg/Release
        run: dotnet nuget push "*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate
          
      
