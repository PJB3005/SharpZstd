name: deploy
on:
  create: # when tags are created
  workflow_dispatch: # clickable button in CI manager

env:
  VCPKG_INSTALLED_DIR: vcpkg_installed
  VCPKG_OVERLAY_TRIPLETS: 'custom-triplets'

jobs:

  vcpkg_windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-windows
          

  vcpkg_windows-x86:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x86-windows


  vcpkg_windows-arm64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-windows


  vcpkg_linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-linux
        env:
          CFLAGS: "-Xlinker -Bsymbolic"
          LDFLAGS: "-Xlinker -Bsymbolic"


  vcpkg_linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Install GNU AArch64 tools
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y     

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-linux
        env:
          CFLAGS: "-Xlinker -Bsymbolic"
          LDFLAGS: "-Xlinker -Bsymbolic"
      

  vcpkg_osx-x64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: x64-osx
      
      
  vcpkg_osx-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: ./.github/workflows/vcpkg
        with:
          triplet: arm64-osx
        

  pack-nuget:
    name: pack-nuget
    needs:
      - vcpkg_windows-x64
      - vcpkg_windows-x86
      - vcpkg_windows-arm64
      - vcpkg_linux-x64
      - vcpkg_linux-arm64
      - vcpkg_osx-x64
      - vcpkg_osx-arm64

    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      
      - name: Install .NET tools
        run: dotnet tool install --global ClangSharpPInvokeGenerator --version 13.0.0-beta1
          
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: vcpkg_artifacts
          
      - name: Unzip artifacts
        run: |
          7z x vcpkg_artifacts/x64-windows -ovcpkg_installed/x64-windows
          7z x vcpkg_artifacts/x86-windows -ovcpkg_installed/x86-windows
          7z x vcpkg_artifacts/arm64-windows -ovcpkg_installed/arm64-windows
          7z x vcpkg_artifacts/x64-linux -ovcpkg_installed/x64-linux
          7z x vcpkg_artifacts/arm64-linux -ovcpkg_installed/arm64-linux
          7z x vcpkg_artifacts/x64-osx -ovcpkg_installed/x64-osx
          7z x vcpkg_artifacts/arm64-osx -ovcpkg_installed/arm64-osx
      
      - name: Fixup artifact names
        shell: bash
        working-directory: './vcpkg_installed'
        run: |
          mv ./x64-linux/lib/libzstd.so.1.5.2 ./x64-linux/lib/zstd.so
          mv ./arm64-linux/lib/libzstd.so.1.5.2 ./arm64-linux/lib/zstd.so

          mv ./x64-osx/lib/libzstd.1.5.2.dylib ./x64-osx/lib/zstd.dylib
          mv ./arm64-osx/lib/libzstd.1.5.2.dylib ./arm64-osx/lib/zstd.dylib
          
      - name: Create sources
        run: | 
          ClangSharpPInvokeGenerator --file-directory vcpkg_installed/x64-windows/include "@scripts/GenerateZstd.rsp"
          ClangSharpPInvokeGenerator --file-directory vcpkg_installed/x64-windows/include "@scripts/GenerateZdict.rsp"
      
      - name: Restore
        run: dotnet restore
      
      - name: Build
        run: dotnet build -c Release --no-restore 
        
      - name: Test
        run: dotnet test -c Release --no-restore --no-build
       
      - name: Pack
        run: dotnet pack -c Release --no-restore --no-build --verbosity normal
        
      - name: Zip Nuget artifact
        run: 7z a pkg.Release.zip ./artifacts/pkg/Release/* -r

      - name: Upload Nuget artifact
        uses: actions/upload-artifact@v2
        with:
          name: pkg.Release
          path: pkg.Release.zip
        
      - name: Nuget Push 
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: artifacts/pkg/Release
        run: dotnet nuget push "*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate
          
      
